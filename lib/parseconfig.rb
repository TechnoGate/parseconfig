#!/usr/bin/env ruby
# $Id: parseconfig.rb 36 2008-02-29 07:26:31Z wdierkes $
# 
# Author::      BJ Dierkes <wdierkes@5dollarwhitebox.org> 
# Copyright::   Copyright (c) 2006,2007 5dollarwhitebox.org 
# License::     GPL
# URL::         http://www.5dollarwhitebox.org
# 

# This class was written to simplify the parsing of configuration
# files in the format of "param = value".  Please review the 
# demo files included with this package.
#
# For further information please refer to the './doc' directory
# as well as the ChangeLog and README files included.
#

class ParseConfig
  
  Version = '0.4.2'

  # Initialize the class with the path to the 'config_file'
  # The class objects are dynamically generated by the
  # name of the 'param' in the config file.  Therefore, if
  # the config file is 'param = value' then the itializer
  # will eval "@param = value"
  #
  def initialize(config_file)
    @config_file = config_file
    raise Errno::EACCES, "#{self.config_file} is not readable" unless File.readable?(self.config_file)
    open(self.config_file).each { |line| 
      line.chomp
      unless (/^\#/.match(line))
        if(/\s*=\s*/.match(line))
          param, value = line.split(/\s*=\s*/, 2)  
          var_name = "#{param}".chomp.strip
          value = value.chomp.strip
          new_value = ''
          if (value)
            if value =~ /^['"](.*)['"]$/
              new_value = $1
            else
              new_value = value
            end
          else
            new_value = ''
          end 
          self.instance_variable_set("@#{var_name}", new_value)
        end
      end
    }   
  end

  # This method will provide the value held by the object "@param"
  # where "@param" is actually the name of the param in the config 
  # file.  
  def get_value(param)
    self.instance_variable_get("@#{param}") 
  end

  # This method is simple.  Should you need to override a value 
  # dynamically, use override_value(param, value) where 'param' is
  # the name of the paramater in the config file.
  #
  def override_value(param, value)
    self.instance_variable_set("@#{param}", value)
  end

  # This method will set the value of '@param' to nil (not in the config
  # file, only in the app).  
  def nil_value(param)
    self.instance_variable_set("@#{param}", nil)
  end
  
  def config_file=(config_file)
    @config_file = config_file  
  end
  
  def config_file()
    @config_file
  end
  
end
